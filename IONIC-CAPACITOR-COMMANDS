################## IONIC - CAPACITOR ##########################

### Basics ###

inonic init >> iniciamos el proyecto (si importamos por ejemplo)
npx cap sync >> sync averything

ionic start name-of-project >> crear proyecto

ionic serve --watch >> para activar proyecto y verlo 

npx capacitor-assets generate >> crear iconos
o npm install @capacitor/assets --save-dev para icons (instaltar siempre)

#tsconfig.json > strict > poner en false para cambiarlo es mejor

#Cambiar nombre: 
capacitor.config.ts >> appName cambiamos lo que esté allí 
(hay más propiedades que cambiar además allí)

si no funciona algo de estilo se puede poner -- y funciona en el css

ionic capacitor build android >> poner en marcha en android (app)

ionic capacitor build ios >> poner en marcha en ios (app)
Si da error se puede usar: 
sudo chmod -R 755/usr/local/bin
sudo gem install cocoapos

#### Bootstrap en ionico:
npm install bootstrap
luego en src/global.scss agregar: 
@import "~bootstrap/dist/css/bootstrap.min.css";
ademas puedes agregar en angular.json > styles y > scripts:
"node_modules/bootstrap/dist/css/bootstrap.min.css" y "node_modules/bootstrap/dist/js/bootstrap.bundle.min.js" respectivamente

se puede usar MenuController para que la barra de menu se cierre o haga cosas



API RestFull:
agregamos en capacitor.config.ts:
server: {
    androidScheme: 'https'
  },
  plugins: {
  CapacitorHttp: {
    enabled: true,
  }
}
luego en el servicio lo importamos:
import { CapacitorHttp } from '@capacitor/core';

MAVEGACION pasando información (ion-fab):
NavParams en provides (fuera del {})
this.NavParams.data["pokemon"] = pokemon; paso de una pagina a otra la data que se llama pokemon e igual eso a pokemon (que es mi array)
this.NavController.navigateForward("detail-pokemon") voy a la pagina y paso la info

MAVEGACION hacia atrás:
this.NavController.pop() >> va para atrás ya que en moviles guarda desde donde venimos
tambien se puede usar ion-back-button: este no es tan usado porque se puede colgar si hay muchas paginas pero es muy facil y con solo una linea de code

para hacer pipes es ionic g pipe nombre-de-pipe y agregar GetStartPipe en declaretion de module donde se usará con su import

ToastController >> mensajes al pulsar btn, esta mejor explicado en la pagina (services >> toast.service.ts de six)

(ionChange)= >> usamos para hacer los checks y lleval la info (product.page.ts de P6)

LIFE CICLE IONIC:
al entrar o salir de pagina podemos usar las funciones: 
ionViewWillEnter, ionViewDidEnter, ionViewWillLeave y ionViewDidEnter

para guardar las ordenes en el burguer (el tipico local storage)
npm install @capacitor/preferences
(creo un servicio para llamar metodos que usan Preference para guardar las ordenes)

funciones para arrays y funciones (es una biblioteca)
npm -i lodash-es 




### Amgular instalers ###

GENERAR QR CODE:
npm install angularx-qrcode --save >> creador de QR
QRCodeModule en module donde se vaya a usar

LEER QR MAS ABAJO EN USOS PERIFERICOS

GESTOR NGX:
https://www.discoduroderoer.es/como-implementar-ngxs-en-tu-proyecto-angular/
npm install @ngxs/store --sabe
ALERTA >>> LEER MAS SOBRE STATE MANAGER (video 137 ionic con esto)


#### usos de perifericos de movil ###

para el flash usamos (hay mas que flash en ese plug):
npm install @capgo/capacitor-flash

plugin de cordoba para que no cambie la orientación:
npm install cordova-plugin-screen-orientation
npm install @awesome-cordova-plugins/screen-orientation
en providers de app modules.ts:
ScreenOrientation

LECTOR QR (no generador):
@capacitor/barcode-scanne
npm install @capacitor/barcode-scanner

IDIOMA QUE CAMBIA AUTOMATICAMENTE:
npm install @capacitor/device
npm i @ngx-translate/core
npm i @ngx-translate/http-loader
hay mucho codigo en app.module.ts

HTTP APIS:
https://capacitorjs.com/docs/apis/http
se copia en capacitor.config.json

### propiedades JS ####
propiedad de arrays:
.some >> debvuelve true o false dependiendo si en alguna parte del array hay true en ese punto mencionado (P5-coupons.page.ts)
.filter >> buscar bien porque no lo llego a pillar como filtrar mejor (devuelte arrary)


NOTAS: 
--legacy-peer-deps si usamos cosas deprecated (viejo)
con el QR hay qeu ir en android studio pasar en Grandle Scripts > variables.grandle > minSdkVersion en valor 26 y en build.grandle lo que hay que pegar en la page https://capacitorjs.com/docs/apis/barcode-scanner

ejecutar Docker:
docker-compose -p='burguer-queen' up -d

environment >> podemos poner cosas para probar y cambiarlas en produccion, en el burguer es para el docker que esta corriendo en local

